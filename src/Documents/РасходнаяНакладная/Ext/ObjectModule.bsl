#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, __)
    результатДвижений = выполнитьВсеДвиженияДокумента();
    Если результатДвижений.Успех = Ложь Тогда
        Отказ = Истина;
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

// Выполняет все движения документа по регистрам:
//  * ТоварыНаСкладах
//  * Продажи
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево - Истина, если все движения выполнены без ошибок
Функция выполнитьВсеДвиженияДокумента()
    результат = Новый Структура("Успех", Истина);

    ЭтотОбъект.Движения.Записать();
    ЭтотОбъект.Движения.ТоварыНаСкладах.Записывать = Истина;
    ЭтотОбъект.Движения.Продажи.Записывать = Истина;

    результатДвиженияТоваров = выполнитьВсеДвиженияТоваровДокумента();
    Если результатДвиженияТоваров.Успех = Ложь Тогда
        результат.Успех = Ложь; // Ошибка при выполнении движений
        Возврат результат;
    КонецЕсли;

    Возврат результат;
КонецФункции

// Выполняет движения товаров документа по регистрам:
//  * ТоварыНаСкладах
//  * Продажи
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево - Истина, если контроль остатков на складе выполнен успешно
Функция выполнитьВсеДвиженияТоваровДокумента()
    результат = Новый Структура("Успех", Истина);

    таблицаТоваровДокумента = Документы.РасходнаяНакладная.ПолучитьТоварыДокумента(ЭтотОбъект.Ссылка, Истина);
    Если таблицаТоваровДокумента = Неопределено Тогда // Если таблица не заполнена
        Возврат результат;
    КонецЕсли;

    Для Каждого строкаТоваров Из таблицаТоваровДокумента Цикл
        выполнитьДвижениеТоварыНаСкладахРасход(строкаТоваров);
        выполнитьДвижениеПродажиОборот(строкаТоваров);
    КонецЦикла;

    // Контроль остатков товаров на складе
    ЭтотОбъект.Движения.ТоварыНаСкладах.Записать();
    ЭтотОбъект.Движения.ТоварыНаСкладах.БлокироватьДляИзменения = Истина;
    результатКонтроляОстатков = выполнитьКонтрольОстатковТоваровНаСкладе(таблицаТоваровДокумента);

    Если результатКонтроляОстатков.Успех = Ложь Тогда
        результат.Успех = Ложь; // Контроль остатков товаров на складе не пройден
    КонецЕсли;

    Возврат результат;
КонецФункции

// Добавляет запись движения (расход) регистра накопления `ТоварыНаСкладах`
// Параметры:
//  строкаТоваров - СтрокаТаблицыЗначений, ВыборкаИзРезультатаЗапроса, Структура
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число
Процедура выполнитьДвижениеТоварыНаСкладахРасход(Знач строкаТоваров)
    движение = ЭтотОбъект.Движения.ТоварыНаСкладах.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    движение.Период = ЭтотОбъект.Дата;
    движение.Склад = ЭтотОбъект.Склад;
    движение.Номенклатура = строкаТоваров.Номенклатура;
    движение.Количество = строкаТоваров.Количество;
КонецПроцедуры

// Добавляет запись движения (оборот) регистра накопления `Продажи`
// Параметры:
//  строкаТоваров - СтрокаТаблицыЗначений, ВыборкаИзРезультатаЗапроса, Структура
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число
//      * Сумма - Число
Процедура выполнитьДвижениеПродажиОборот(Знач строкаТоваров)
    движение = ЭтотОбъект.Движения.Продажи.Добавить();
    движение.Период = ЭтотОбъект.Дата;
    движение.Номенклатура = строкаТоваров.Номенклатура;
    движение.Количество = строкаТоваров.Количество;
    движение.Сумма = строкаТоваров.Сумма;
КонецПроцедуры

// Параметры:
//  таблицаТоваровДокумента - ТаблицаЗначений
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число - Количество товара в документе
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево - Истина, если контроль остатков на складе выполнен успешно
Функция выполнитьКонтрольОстатковТоваровНаСкладе(Знач таблицаТоваровДокумента)
    результат = Новый Структура("Успех", Истина);

    моментВремениДокумента = Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Включая);
    результатПоиска = найтиОтрицательныеОстаткиТоваровНаСкладе(таблицаТоваровДокумента, моментВремениДокумента);

    Если результатПоиска.Успех Тогда // Наличие отрицательных остатков
        Для Каждого строкаОтрицательныхОстатков Из результатПоиска.Таблица Цикл
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = СтрШаблон(
                    "Недостаточно остатков на складе товара: ""%1"".
                    |Остаток товара на складе: %2, количество товара в документе: %3. Отрицательный остаток: %4",
                    Строка(строкаОтрицательныхОстатков.Номенклатура),
                    Строка(строкаОтрицательныхОстатков.КоличествоВДокументе + строкаОтрицательныхОстатков.ОтрицательныйОстатокНаСкладе),
                    Строка(строкаОтрицательныхОстатков.КоличествоВДокументе),
                    Строка(строкаОтрицательныхОстатков.ОтрицательныйОстатокНаСкладе));
            Сообщение.Сообщить();
        КонецЦикла;
        результат.Успех = Ложь;
        Возврат результат;
    КонецЕсли;

    Возврат результат;
КонецФункции

// Выполняет поиск наличия отрицательных остатков товаров на складе
// Параметры:
//  таблицаТоваровДокумента - ТаблицаЗначений
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число - Количество товара в документе
// период - Дата, МоментВремени, Граница
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево - Истина, если в регистре надины товары с отрицательным остатком
//      * Таблица - Неопределено, ТаблицаЗначений - Если отрицательные остатки отсутствуют - Неопределено
//              ** Номенклатура - СправочникСсылка.Номенклатура
//              ** ОтрицательныйОстатокНаСкладе - Число - Значение отрицательного остатка на складе
//              ** КоличествоВДокументе - Число - Количество товара в документе
Функция найтиОтрицательныеОстаткиТоваровНаСкладе(Знач таблицаТоваровДокумента, Знач период = Неопределено)
    результат = Новый Структура("Успех, Таблица", Истина);

    запрос = Новый Запрос;
    запрос.Текст =
        "ВЫБРАТЬ
        |	ТоварыДокумента.Номенклатура КАК Номенклатура,
        |	ТоварыДокумента.Количество КАК Количество
        |ПОМЕСТИТЬ ВТ_Товары
        |ИЗ
        |	&ТоварыДокумента КАК ТоварыДокумента
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ОстаткиТоваровНаСкладе.Номенклатура КАК Номенклатура,
        |	ОстаткиТоваровНаСкладе.КоличествоОстаток КАК КоличествоОстаток
        |ПОМЕСТИТЬ ВТ_ОстаткиТоваровНаСкладе
        |ИЗ
        |	РегистрНакопления.ТоварыНаСкладах.Остатки(
        |			&Период,
        |			Склад = &Склад
        |				И Номенклатура В
        |					(ВЫБРАТЬ
        |						ВТ_Товары.Номенклатура КАК Номенклатура
        |					ИЗ
        |						ВТ_Товары)) КАК ОстаткиТоваровНаСкладе
        |ГДЕ
        |	ОстаткиТоваровНаСкладе.КоличествоОстаток < 0
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_ОстаткиТоваровНаСкладе.Номенклатура КАК Номенклатура,
        |	ВТ_ОстаткиТоваровНаСкладе.КоличествоОстаток КАК ОтрицательныйОстатокНаСкладе,
        |	ВТ_Товары.Количество КАК КоличествоВДокументе
        |ИЗ
        |	ВТ_ОстаткиТоваровНаСкладе КАК ВТ_ОстаткиТоваровНаСкладе
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
        |		ПО ВТ_ОстаткиТоваровНаСкладе.Номенклатура = ВТ_Товары.Номенклатура
        |";

    запрос.УстановитьПараметр("Склад", ЭтотОбъект.Склад);
    запрос.УстановитьПараметр("ТоварыДокумента", таблицаТоваровДокумента);

    Если период = Неопределено Тогда
        запрос.Текст = СтрЗаменить(запрос.Текст, "&Период", " ");
    Иначе
        запрос.УстановитьПараметр("Период", период);
    КонецЕсли;

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда // Отрицательные остатки отсутствуют
        результат.Успех = Ложь;
        Возврат результат;
    КонецЕсли;

    таблицаОстатков = результатЗапроса.Выгрузить();
    результат.Таблица = таблицаОстатков;
    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
