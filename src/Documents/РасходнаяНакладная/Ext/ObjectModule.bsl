#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(_, __)
	выполнитьВсеДвиженияДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

// Выполняет все движения документа по регистрам:
//  * ТоварыНаСкладах
//  * Продажи
Процедура выполнитьВсеДвиженияДокумента()
    ЭтотОбъект.Движения.ТоварыНаСкладах.Записывать = Истина;
    ЭтотОбъект.Движения.Продажи.Записывать = Истина;

    выполнитьВсеДвиженияТоваровДокумента();
КонецПроцедуры

// Выполняет движения товаров документа по регистрам:
//  * ТоварыНаСкладах - Контроль остатков на складе не выполняется
//  * Продажи
Процедура выполнитьВсеДвиженияТоваровДокумента()
    таблицаТоварыДокумента = Документы.РасходнаяНакладная.ПолучитьТоварыДокумента(ЭтотОбъект.Ссылка, Истина);
    Если таблицаТоварыДокумента = Неопределено Тогда // Если таблица не заполнена
        Возврат;
    КонецЕсли;

    Для Каждого строкаТоваров Из таблицаТоварыДокумента Цикл
        выполнитьДвижениеТоварыНаСкладахРасход(строкаТоваров);
        выполнитьДвижениеПродажиОборот(строкаТоваров);
    КонецЦикла;
КонецПроцедуры

// Добавляет запись движения (расход) регистра накопления `ТоварыНаСкладах`
// Параметры:
//  строкаТоваров - СтрокаТаблицыЗначений, ВыборкаИзРезультатаЗапроса, Структура
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число
Процедура выполнитьДвижениеТоварыНаСкладахРасход(Знач строкаТоваров)
    движение = ЭтотОбъект.Движения.ТоварыНаСкладах.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    движение.Период = ЭтотОбъект.Дата;
    движение.Склад = ЭтотОбъект.Склад;
    движение.Номенклатура = строкаТоваров.Номенклатура;
    движение.Количество = строкаТоваров.Количество;
КонецПроцедуры

// Добавляет запись движения (оборот) регистра накопления `Продажи`
// Параметры:
//  строкаТоваров - СтрокаТаблицыЗначений, ВыборкаИзРезультатаЗапроса, Структура
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число
//      * Сумма - Число
Процедура выполнитьДвижениеПродажиОборот(Знач строкаТоваров)
    движение = ЭтотОбъект.Движения.Продажи.Добавить();
    движение.Период = ЭтотОбъект.Дата;
    движение.Номенклатура = строкаТоваров.Номенклатура;
    движение.Количество = строкаТоваров.Количество;
    движение.Сумма = строкаТоваров.Сумма;
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
